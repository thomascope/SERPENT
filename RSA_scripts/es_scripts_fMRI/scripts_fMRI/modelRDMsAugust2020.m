function Models = modelRDMs()


%%

fldnm = 'Strength';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([0 1; 1 0],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 1 1; 1 1 1; 1 1 1],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN
%imAlpha = ones(size(Models.(fldnm)));
%imAlpha(isnan(Models.(fldnm))) = 0;
%figure; imagesc(Models.(fldnm),'AlphaData',imAlpha);

fldnm = 'StrengthMatching';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([0 1; 1 0],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN NaN; NaN NaN NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'StrengthMismatching';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([0 1; 1 0],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN NaN; NaN 1 NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Cong';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([1 1; 1 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([0 1 NaN; 1 0 NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'CongStrong';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([0 1 NaN; 1 0 NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'CongWeak';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([0 1 NaN; 1 0 NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'CongWithin';
Models.(fldnm) = ones(32,32);
Models.(fldnm) = kron([1 1; 1 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN NaN; NaN 0 NaN; NaN NaN NaN],Models.(fldnm)); % Extend across Matching, Mismatching and NoiseFinal
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl2';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([1 1; 1 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 1; 1 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = Models.(fldnm)(1:32,1:192);
Models.(fldnm)(1:192,193:224) = Models.(fldnm)(1:192,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2Within';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = NaN;
Models.(fldnm)(1:192,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2WithinNoNoiseInitial';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2StrongM';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2WeakM';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2StrongMM';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2WeakMM';
%Models.(fldnm) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2StrongNoise';
%Models.(fldnm)(129:160,129:160) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm)(129:160,129:160) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm)(129:192,129:192) = kron([1 NaN; NaN NaN],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2WeakNoise';
%Models.(fldnm)(129:160,129:160) = [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]; % Syl2 Model
Models.(fldnm)(129:160,129:160) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm)(129:192,129:192) = kron([NaN NaN; NaN 1],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2NoiseSpeech';
%Models.(fldnm)(193:224,193:224) = [NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,NaN]; % Syl2 Model
Models.(fldnm)(193:224,193:224) = [0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,NaN,NaN;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NaN,NaN,0,0];
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl2Graded';
load('RDM_phon_syl2.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(isnan(Models.Syl2(1:128,1:128))) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = Models.(fldnm)(1:32,1:192);
Models.(fldnm)(1:192,193:224) = Models.(fldnm)(1:192,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedWithin';
Models.(fldnm)(1:32,1:32) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = NaN;
Models.(fldnm)(1:192,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedStrongM';
Models.(fldnm) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedWeakM';
Models.(fldnm) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedStrongMM';
Models.(fldnm) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedWeakMM';
Models.(fldnm) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedStrongNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([1 NaN; NaN NaN],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedWeakNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([NaN NaN; NaN 1],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNoiseSpeech';
Models.(fldnm)(193:224,193:224) = Models.Syl2Graded(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(193:224,193:224))) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl2GradedNorm';
load('RDM_phon_syl2Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(isnan(Models.Syl2(1:128,1:128))) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = Models.(fldnm)(1:32,1:192);
Models.(fldnm)(1:192,193:224) = Models.(fldnm)(1:192,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormWithin';
Models.(fldnm)(1:32,1:32) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = NaN;
Models.(fldnm)(1:192,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormStrongM';
Models.(fldnm) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormWeakM';
Models.(fldnm) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormStrongMM';
Models.(fldnm) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormWeakMM';
Models.(fldnm) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormStrongNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([1 NaN; NaN NaN],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormWeakNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([NaN NaN; NaN 1],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedNormNoiseSpeech';
Models.(fldnm)(193:224,193:224) = Models.Syl2GradedNorm(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(193:224,193:224))) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl2GradedFeatures';
load('RDM_features_syl2.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(isnan(Models.Syl2(1:128,1:128))) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = Models.(fldnm)(1:32,1:192);
Models.(fldnm)(1:192,193:224) = Models.(fldnm)(1:192,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesWithin';
Models.(fldnm)(1:32,1:32) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,193:224) = Models.(fldnm)(1:32,1:32); % NoiseInitial
Models.(fldnm)(193:224,1:192) = NaN;
Models.(fldnm)(1:192,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesStrongM';
Models.(fldnm) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesWeakM';
Models.(fldnm) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesStrongMM';
Models.(fldnm) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([1 NaN; NaN NaN],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesWeakMM';
Models.(fldnm) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(1:32,1:32))) = NaN;
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Strong and Weak
Models.(fldnm) = kron([NaN NaN; NaN 1],Models.(fldnm)); % Extend across Matching and Mismatching
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesStrongNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([1 NaN; NaN NaN],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesWeakNoise';
Models.(fldnm)(129:160,129:160) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(129:160,129:160))) = NaN;
Models.(fldnm)(129:192,129:192) = kron([NaN NaN; NaN 1],Models.(fldnm)(129:160,129:160)); % Extend across Strong and Weak
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl2GradedFeaturesNoiseSpeech';
Models.(fldnm)(193:224,193:224) = Models.Syl2GradedFeatures(1:32,1:32);
Models.(fldnm)(isnan(Models.Syl2(193:224,193:224))) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear Strong/Weak / Matching/Mismatching
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl1';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(find(Models.(fldnm)==0)) = 0;
Models.(fldnm)(find(Models.(fldnm)>0)) = 1;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1Strong';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(33:64,:) = NaN; % Clear Weak Matching
Models.(fldnm)(:,33:64) = NaN;
Models.(fldnm)(97:128,:) = NaN; % Clear Weak Mismatching
Models.(fldnm)(:,97:128) = NaN;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = NaN; % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = NaN;
Models.(fldnm)(1:160,161:192) = NaN;
Models.(fldnm)(find(Models.(fldnm)==0)) = 0;
Models.(fldnm)(find(Models.(fldnm)>0)) = 1;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1Weak';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(1:32,:) = NaN; % Clear Strong Matching
Models.(fldnm)(:,1:32) = NaN;
Models.(fldnm)(65:96,:) = NaN; % Clear Strong Mismatching
Models.(fldnm)(:,65:96) = NaN;
Models.(fldnm)(129:160,129:160) = NaN; % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = NaN;
Models.(fldnm)(1:128,129:160) = NaN;
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(find(Models.(fldnm)==0)) = 0;
Models.(fldnm)(find(Models.(fldnm)>0)) = 1;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl1Graded';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedWithin';
load('RDM_phon_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedStrong';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(33:64,:) = NaN; % Clear Weak Matching
Models.(fldnm)(:,33:64) = NaN;
Models.(fldnm)(97:128,:) = NaN; % Clear Weak Mismatching
Models.(fldnm)(:,97:128) = NaN;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = NaN; % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = NaN;
Models.(fldnm)(1:160,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedWeak';
load('RDM_phon_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(1:32,:) = NaN; % Clear Strong Matching
Models.(fldnm)(:,1:32) = NaN;
Models.(fldnm)(65:96,:) = NaN; % Clear Strong Mismatching
Models.(fldnm)(:,65:96) = NaN;
Models.(fldnm)(129:160,129:160) = NaN; % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = NaN;
Models.(fldnm)(1:128,129:160) = NaN;
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedStrongM';
load('RDM_phon_syl1.mat')
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedWeakM';
load('RDM_phon_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(1:32,:) = NaN; % Clear Strong Matching
Models.(fldnm)(:,1:32) = NaN;
Models.(fldnm)(65:96,:) = NaN; % Clear Strong Mismatching
Models.(fldnm)(:,65:96) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedStrongMM';
load('RDM_phon_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedWeakMM';
load('RDM_phon_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedStrongNoise';
load('RDM_phon_syl1.mat')
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedWeakNoise';
load('RDM_phon_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN


%%

fldnm = 'Syl1GradedNorm';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWithin';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormStrong';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(33:64,:) = NaN; % Clear Weak Matching
Models.(fldnm)(:,33:64) = NaN;
Models.(fldnm)(97:128,:) = NaN; % Clear Weak Mismatching
Models.(fldnm)(:,97:128) = NaN;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = NaN; % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = NaN;
Models.(fldnm)(1:160,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWeak';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(1:32,:) = NaN; % Clear Strong Matching
Models.(fldnm)(:,1:32) = NaN;
Models.(fldnm)(65:96,:) = NaN; % Clear Strong Mismatching
Models.(fldnm)(:,65:96) = NaN;
Models.(fldnm)(129:160,129:160) = NaN; % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = NaN;
Models.(fldnm)(1:128,129:160) = NaN;
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWithinStrong';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Weak
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWithinWeak';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormStrongMM';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWeakMM';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormStrongNoise';
load('RDM_phon_syl1Norm.mat')
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedNormWeakNoise';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Syl1GradedFeatures';
load('RDM_features_syl1.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWithin';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesStrong';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(33:64,:) = NaN; % Clear Weak Matching
Models.(fldnm)(:,33:64) = NaN;
Models.(fldnm)(97:128,:) = NaN; % Clear Weak Mismatching
Models.(fldnm)(:,97:128) = NaN;
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = Models.(fldnm)(1:32,1:128);
Models.(fldnm)(1:128,129:160) = Models.(fldnm)(1:128,1:32);
Models.(fldnm)(161:192,161:192) = NaN; % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = NaN;
Models.(fldnm)(1:160,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWeak';
load('RDM_phon_syl1Norm.mat');
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(1:32,:) = NaN; % Clear Strong Matching
Models.(fldnm)(:,1:32) = NaN;
Models.(fldnm)(65:96,:) = NaN; % Clear Strong Mismatching
Models.(fldnm)(:,65:96) = NaN;
Models.(fldnm)(129:160,129:160) = NaN; % NoiseFinal Strong
Models.(fldnm)(129:160,1:128) = NaN;
Models.(fldnm)(1:128,129:160) = NaN;
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(161:192,1:160) = Models.(fldnm)(33:64,1:160);
Models.(fldnm)(1:160,161:192) = Models.(fldnm)(1:160,33:64);
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWithinStrong';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Weak
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWithinWeak';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64); % NoiseFinal Weak
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesStrongMM';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWeakMM';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesStrongNoise';
load('RDM_features_syl1.mat')
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32); % NoiseFinal Strong
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Syl1GradedFeaturesWeakNoise';
load('RDM_features_syl1.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(1:128,:) = NaN; % Clear
Models.(fldnm)(:,1:128) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'WholeGraded';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedWithin';
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = Models.WholeGraded(1:32,1:32);
Models.(fldnm)(33:64,33:64) = Models.WholeGraded(33:64,33:64);
Models.(fldnm)(65:96,65:96) = Models.WholeGraded(65:96,65:96);
Models.(fldnm)(97:128,97:128) = Models.WholeGraded(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedStrongM';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedWeakM';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedStrongMM';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedWeakMM';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedStrongNoise';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedWeakNoise';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNoiseSpeech';
load('RDM_phon_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(193:224,193:224) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'WholeGradedNorm';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormWithin';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormStrongM';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormWeakM';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormStrongMM';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormWeakMM';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormStrongNoise';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormWeakNoise';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeGradedNormNoiseSpeech';
load('RDM_phon_wholeNorm.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(193:224,193:224) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'WholeFeatures';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:128,1:128) = RDM;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesWithin';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesStrongM';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(1:32,1:32) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesWeakM';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(33:64,33:64) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesStrongMM';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(65:96,65:96) = RDM(65:96,65:96);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesWeakMM';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(97:128,97:128) = RDM(97:128,97:128);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesStrongNoise';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(129:160,129:160) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesWeakNoise';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(161:192,161:192) = RDM(33:64,33:64);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'WholeFeaturesNoiseSpeech';
load('RDM_features_whole.mat');
Models.(fldnm) = NaN(224,224);
Models.(fldnm)(193:224,193:224) = RDM(1:32,1:32);
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

%%

fldnm = 'Prob';
load('RDM_prob.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'ProbWithin';
load('RDM_prob.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(65:128,1:64) = NaN;
Models.(fldnm)(1:64,65:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'ProbM';
load('RDM_prob.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(65:128,1:128) = NaN;
Models.(fldnm)(1:128,65:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'ProbMM';
load('RDM_prob.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(1:64,1:128) = NaN;
Models.(fldnm)(1:128,1:64) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Prob2M';
load('RDM_prob2.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(65:128,1:128) = NaN;
Models.(fldnm)(1:128,65:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Prob2MM';
load('RDM_prob2.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(1:64,1:128) = NaN;
Models.(fldnm)(1:128,1:64) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'GatingfMRI';
load('RDM_gatingfMRI.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'GatingfMRIWithin';
load('RDM_gatingfMRI.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(65:128,1:64) = NaN;
Models.(fldnm)(1:64,65:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'Gating';
load('RDM_gating.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN

fldnm = 'GatingWithin';
load('RDM_gating.mat');
Models.(fldnm) = RDM;
Models.(fldnm)(65:128,1:64) = NaN;
Models.(fldnm)(1:64,65:128) = NaN;
Models.(fldnm)(129:160,:) = NaN; % NoiseFinal Strong
Models.(fldnm)(:,129:160) = NaN;
Models.(fldnm)(161:192,:) = NaN; % NoiseFinal Weak
Models.(fldnm)(:,161:192) = NaN;
Models.(fldnm)(193:224,:) = NaN; % NoiseInitial
Models.(fldnm)(:,193:224) = NaN;
Models.(fldnm)(find(eye(size(Models.(fldnm))))) = NaN; % Make diagonal NaN