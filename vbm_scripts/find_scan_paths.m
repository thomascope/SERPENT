%% Import data from text file.
% Script for importing data from the following text file:
%
%    /imaging/tc02/vespa/scans/PNFA_VBM/tom/test_allheaders
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/09/06 15:21:36

%% Initialize variables.
filename = './test_allheaders_sixthversion';
delimiter = '';

%% Format string for each line of text:
%   column1: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
test_allheaders = dataArray{:, 1};

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;

%% Now find the text files with the scan details
load('scan_details.mat')

% First find the PNFA scans (easy as only one scan for each)
PNFA_paths = cell(length(PNFA),1);
for thisone = 1:length(PNFA)
    IndexC = strfind(test_allheaders, num2str(PNFA(thisone)));
    Index = find(not(cellfun('isempty', IndexC)));
    PNFA_paths(thisone,1) = test_allheaders(Index,:);
end

%Then find the small control scan set (making sure that correct choice is
%made from multiple scans)
Matched_controls_paths = cell(length(CONTROLSMATCHING),1);
for thisone = 1:length(CONTROLSMATCHING)
    IndexC = strfind(test_allheaders, num2str(CONTROLSMATCHING(thisone)));
    IndexWBIC = find(not(cellfun('isempty', IndexC))); %Find the indexes of this participant
    IndexC = strfind(test_allheaders, num2str(Date_of_scan(thisone)));
    IndexDATE = find(not(cellfun('isempty', IndexC))); %Find the indexes of this date of scan
    try
        Matched_controls_paths(thisone,1) = test_allheaders(intersect(IndexDATE,IndexWBIC),:); %Find the scan in question
    catch
        Matched_controls_paths(thisone,1) = {'missing'};
    end
end

%Then find the large control scan set (making sure that correct choice is
%made from multiple scans)
Larger_control_group_paths = cell(length(Larger_control_group_WBIC),1);
for thisone = 1:length(Larger_control_group_WBIC)
    IndexC = strfind(test_allheaders, num2str(Larger_control_group_WBIC(thisone)));
    IndexWBIC = find(not(cellfun('isempty', IndexC))); %Find the indexes of this participant
    IndexC = strfind(test_allheaders, num2str(Larger_Date_of_scan(thisone)));
    IndexDATE = find(not(cellfun('isempty', IndexC))); %Find the indexes of this date of scan
    try
        Larger_control_group_paths(thisone,1) = test_allheaders(intersect(IndexDATE,IndexWBIC),:); %Find the scan in question
    catch
        Larger_control_group_paths(thisone,1) = {['missing ' num2str(Larger_control_group_WBIC(thisone)) ' on ' num2str(Larger_Date_of_scan(thisone))]};
    end
end

%% Now find the filepaths of the MPRAGE images
split_stem = regexp(Matched_controls_paths, '/mprage_125', 'split');

pathstem = cell(length(split_stem),1);
for i = 1:length(split_stem)
    pathstem{i} = [split_stem{i}{1} '/mprage_125/'];
end

initialstem = pwd;
Matched_control_full_imagepath = cell(length(split_stem),1);
for i = 1:length(pathstem)
    cd(pathstem{i})
    try
        test = dir('cn*mprage_125.nii');
        mprage_file = test.name;
    catch
        try
            test = dir('con*mprage_125.nii');
            mprage_file = test.name;
        catch
            test = dir('ppa*mprage_125.nii');
            mprage_file = test.name;
        end
    end
    Matched_control_full_imagepath{i} = [initialstem pathstem{i}(2:end) mprage_file];
        
    cd(initialstem)    
end


split_stem = regexp(PNFA_paths, '/mprage_125', 'split');

pathstem = cell(length(split_stem),1);
for i = 1:length(split_stem)
    pathstem{i} = [split_stem{i}{1} '/mprage_125/'];
end

initialstem = pwd;
PNFA_full_imagepath = cell(length(split_stem),1);
for i = 1:length(pathstem)
    cd(pathstem{i})
    try
        test = dir('cn*mprage_125.nii');
        mprage_file = test.name;
    catch
        try
            test = dir('con*mprage_125.nii');
            mprage_file = test.name;
        catch
            try
                test = dir('ppa*mprage_125.nii');
                mprage_file = test.name;
            catch
                test = dir('pt*mprage_125.nii');
                mprage_file = test.name;
            end
        end
    end
    PNFA_full_imagepath{i} = [initialstem pathstem{i}(2:end) mprage_file];
        
    cd(initialstem)    
end

split_stem = regexp(Larger_control_group_paths, '/mprage_125', 'split');

pathstem = cell(length(split_stem),1);
for i = 1:length(split_stem)
    pathstem{i} = [split_stem{i}{1} '/mprage_125/'];
end

initialstem = pwd;
Larger_control_full_imagepath = cell(length(split_stem),1);
for i = 1:length(pathstem)
    cd(pathstem{i})
    try
        test = dir('cn*mprage_125.nii');
        mprage_file = test.name;
    catch
        try
            test = dir('con*mprage_125.nii');
            mprage_file = test.name;
        catch
            test = dir('ppa*mprage_125.nii');
            mprage_file = test.name;
        end
    end
    Larger_control_full_imagepath{i} = [initialstem pathstem{i}(2:end) mprage_file];
        
    cd(initialstem)    
end

all_imagepaths = [PNFA_full_imagepath; Larger_control_full_imagepath]

save('image_paths.mat', 'all_imagepaths', 'Larger_control_full_imagepath', 'PNFA_full_imagepath', 'Matched_control_full_imagepath')
